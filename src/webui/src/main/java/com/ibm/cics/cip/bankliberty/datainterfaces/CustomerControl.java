/*
 *
 *    Copyright IBM Corp. 2023
 *
 *
 */

package com.ibm.cics.cip.bankliberty.datainterfaces;
import com.ibm.jzos.fields.*;

// Generated by IBM Record Generator for Java V3.0.2 Build 20221206-1121 on: Tue Feb 14 07:05:37 CST 2023

public class CustomerControl {
	protected static CobolDatatypeFactory factory = new CobolDatatypeFactory();
	static { factory.setStringTrimDefault(false); } 

	/** <pre>
	 01 WS-CUSTOMER-AGE               PIC S9999. </pre> */
	public static final int CUSTOMER_CONTROL_len = 259; 

	/** <pre>
	 01 CUSTOMER-CONTROL.
	     COPY CUSTCTRL.
    *
    *
    *    Copyright IBM Corp. 2023
    *
    *
    *
	     03 CUSTOMER-CONTROL-RECORD. </pre> */
	public static final int CUSTOMER_CONTROL_RECORD_len = 259; 
	public static final int CUSTOMER_CONTROL_RECORD_offset = factory.getOffset();

	/** <pre>
	******************************************************************
	     03 CUSTOMER-CONTROL-RECORD. </pre> */
	protected static final StringField CUSTOMER_CONTROL_EYECATCHER = factory.getStringField(4);

	/** <pre>
	     03 CUSTOMER-CONTROL-RECORD. </pre> */
	public static final String CUSTOMER_CONTROL_EYECATCHER_V = "CTRL";

	/** <pre>
	        05 CUSTOMER-CONTROL-EYECATCHER             PIC X(4). </pre> */
	public static final int CUSTOMER_CONTROL_KEY_len = 16; 
	public static final int CUSTOMER_CONTROL_KEY_offset = factory.getOffset();

	/** <pre>
	           88 CUSTOMER-CONTROL-EYECATCHER-V        VALUE 'CTRL'. </pre> */
	protected static final ExternalDecimalAsIntField CUSTOMER_CONTROL_SORTCODE = factory.getExternalDecimalAsIntField(6, false, false, false, false);

	/** <pre>
	        05 CUSTOMER-CONTROL-KEY. </pre> */
	protected static final ExternalDecimalAsLongField CUSTOMER_CONTROL_NUMBER = factory.getExternalDecimalAsLongField(10, false, false, false, false);

	/** <pre>
	           07 CUSTOMER-CONTROL-SORTCODE        PIC 9(6) DISPLAY. </pre> */
	protected static final ExternalDecimalAsLongField NUMBER_OF_CUSTOMERS = factory.getExternalDecimalAsLongField(10, false, false, false, false);

	/** <pre>
	           07 CUSTOMER-CONTROL-NUMBER          PIC 9(10) DISPLAY. </pre> */
	protected static final ExternalDecimalAsLongField LAST_CUSTOMER_NUMBER = factory.getExternalDecimalAsLongField(10, false, false, false, false);

	/** <pre>
	        05 NUMBER-OF-CUSTOMERS                 PIC 9(10) DISPLAY. </pre> */
	protected static final StringField CUSTOMER_CONTROL_SUCCESS_FLAG = factory.getStringField(1);

	/** <pre>
	        05 LAST-CUSTOMER-NUMBER                PIC 9(10) DISPLAY. </pre> */
	public static final String CUSTOMER_CONTROL_SUCCESS = "Y";

	/** <pre>
	        05 CUSTOMER-CONTROL-SUCCESS-FLAG       PIC X. </pre> */
	protected static final StringField CUSTOMER_CONTROL_FAIL_CODE = factory.getStringField(1);

	/** <pre>
	        88 CUSTOMER-CONTROL-SUCCESS VALUE 'Y'. </pre> */
	protected static final StringField FILLER_1 = factory.getStringField(38);

	/** <pre>
	        05 CUSTOMER-CONTROL-FAIL-CODE PIC X. </pre> */
	protected static final StringField FILLER_2 = factory.getStringField(160);

	/** <pre>
	        05 FILLER                              PIC X(38). </pre> */
	protected static final ExternalDecimalAsIntField FILLER_3 = factory.getExternalDecimalAsIntField(8, false, false, false, false);

	/** <pre>
	        05 FILLER                              PIC X(160). </pre> */
	protected static final ExternalDecimalAsIntField FILLER_4 = factory.getExternalDecimalAsIntField(3, false, false, false, false);

	/** <pre>
	        05 FILLER                              PIC 9(8). </pre> */
	protected static final ExternalDecimalAsIntField FILLER_5 = factory.getExternalDecimalAsIntField(8, false, false, false, false);

	protected byte[] _byteBuffer;
	// Instance variables used to cache field values
	protected String customerControlEyecatcher;
	protected int customerControlSortcode;
	protected boolean customerControlSortcodeIsSet;
	protected long customerControlNumber;
	protected boolean customerControlNumberIsSet;
	protected long numberOfCustomers;
	protected boolean numberOfCustomersIsSet;
	protected long lastCustomerNumber;
	protected boolean lastCustomerNumberIsSet;
	protected String customerControlSuccessFlag;
	protected String customerControlFailCode;
	protected String filler_1;
	protected String filler_2;
	protected int filler_3;
	protected boolean filler_3IsSet;
	protected int filler_4;
	protected boolean filler_4IsSet;
	protected int filler_5;
	protected boolean filler_5IsSet;


	public CustomerControl (byte[] buffer) {
		this._byteBuffer = buffer;
	}

	public CustomerControl () {
		this._byteBuffer = new byte[CUSTOMER_CONTROL_len];
	}

	public byte[] getByteBuffer() {
		return _byteBuffer;
	}


	public String getCustomerControlEyecatcher() {
		if (customerControlEyecatcher == null) {
			customerControlEyecatcher = CUSTOMER_CONTROL_EYECATCHER.getString(_byteBuffer);
		}
		return customerControlEyecatcher;
	}

	public void setCustomerControlEyecatcher(String customerControlEyecatcher) {
		if (CUSTOMER_CONTROL_EYECATCHER.equals(this.customerControlEyecatcher, customerControlEyecatcher)) {
			return;
		}
		CUSTOMER_CONTROL_EYECATCHER.putString(customerControlEyecatcher, _byteBuffer);
		this.customerControlEyecatcher = customerControlEyecatcher;
	}

	public boolean isCustomerControlEyecatcherV() {
		return getCustomerControlEyecatcher().equals(CUSTOMER_CONTROL_EYECATCHER_V);
	}

	public int getCustomerControlSortcode() {
		if (!customerControlSortcodeIsSet) {
			customerControlSortcode = CUSTOMER_CONTROL_SORTCODE.getInt(_byteBuffer);
			customerControlSortcodeIsSet = true;
		}
		return customerControlSortcode;
	}

	public void setCustomerControlSortcode(int customerControlSortcode) {
		if (customerControlSortcodeIsSet && CUSTOMER_CONTROL_SORTCODE.equals(this.customerControlSortcode, customerControlSortcode)) {
			return;
		}
		CUSTOMER_CONTROL_SORTCODE.putInt(customerControlSortcode, _byteBuffer);
		this.customerControlSortcode = customerControlSortcode;
		customerControlSortcodeIsSet = true;
	}

	public long getCustomerControlNumber() {
		if (!customerControlNumberIsSet) {
			customerControlNumber = CUSTOMER_CONTROL_NUMBER.getLong(_byteBuffer);
			customerControlNumberIsSet = true;
		}
		return customerControlNumber;
	}

	public void setCustomerControlNumber(long customerControlNumber) {
		if (customerControlNumberIsSet && CUSTOMER_CONTROL_NUMBER.equals(this.customerControlNumber, customerControlNumber)) {
			return;
		}
		CUSTOMER_CONTROL_NUMBER.putLong(customerControlNumber, _byteBuffer);
		this.customerControlNumber = customerControlNumber;
		customerControlNumberIsSet = true;
	}

	public long getNumberOfCustomers() {
		if (!numberOfCustomersIsSet) {
			numberOfCustomers = NUMBER_OF_CUSTOMERS.getLong(_byteBuffer);
			numberOfCustomersIsSet = true;
		}
		return numberOfCustomers;
	}

	public void setNumberOfCustomers(long numberOfCustomers) {
		if (numberOfCustomersIsSet && NUMBER_OF_CUSTOMERS.equals(this.numberOfCustomers, numberOfCustomers)) {
			return;
		}
		NUMBER_OF_CUSTOMERS.putLong(numberOfCustomers, _byteBuffer);
		this.numberOfCustomers = numberOfCustomers;
		numberOfCustomersIsSet = true;
	}

	public long getLastCustomerNumber() {
		if (!lastCustomerNumberIsSet) {
			lastCustomerNumber = LAST_CUSTOMER_NUMBER.getLong(_byteBuffer);
			lastCustomerNumberIsSet = true;
		}
		return lastCustomerNumber;
	}

	public void setLastCustomerNumber(long lastCustomerNumber) {
		if (lastCustomerNumberIsSet && LAST_CUSTOMER_NUMBER.equals(this.lastCustomerNumber, lastCustomerNumber)) {
			return;
		}
		LAST_CUSTOMER_NUMBER.putLong(lastCustomerNumber, _byteBuffer);
		this.lastCustomerNumber = lastCustomerNumber;
		lastCustomerNumberIsSet = true;
	}

	public String getCustomerControlSuccessFlag() {
		if (customerControlSuccessFlag == null) {
			customerControlSuccessFlag = CUSTOMER_CONTROL_SUCCESS_FLAG.getString(_byteBuffer);
		}
		return customerControlSuccessFlag;
	}

	public void setCustomerControlSuccessFlag(String customerControlSuccessFlag) {
		if (CUSTOMER_CONTROL_SUCCESS_FLAG.equals(this.customerControlSuccessFlag, customerControlSuccessFlag)) {
			return;
		}
		CUSTOMER_CONTROL_SUCCESS_FLAG.putString(customerControlSuccessFlag, _byteBuffer);
		this.customerControlSuccessFlag = customerControlSuccessFlag;
	}

	public boolean isCustomerControlSuccess() {
		return getCustomerControlSuccessFlag().equals(CUSTOMER_CONTROL_SUCCESS);
	}

	public String getCustomerControlFailCode() {
		if (customerControlFailCode == null) {
			customerControlFailCode = CUSTOMER_CONTROL_FAIL_CODE.getString(_byteBuffer);
		}
		return customerControlFailCode;
	}

	public void setCustomerControlFailCode(String customerControlFailCode) {
		if (CUSTOMER_CONTROL_FAIL_CODE.equals(this.customerControlFailCode, customerControlFailCode)) {
			return;
		}
		CUSTOMER_CONTROL_FAIL_CODE.putString(customerControlFailCode, _byteBuffer);
		this.customerControlFailCode = customerControlFailCode;
	}

	public String getFiller_1() {
		if (filler_1 == null) {
			filler_1 = FILLER_1.getString(_byteBuffer);
		}
		return filler_1;
	}

	public void setFiller_1(String filler_1) {
		if (FILLER_1.equals(this.filler_1, filler_1)) {
			return;
		}
		FILLER_1.putString(filler_1, _byteBuffer);
		this.filler_1 = filler_1;
	}

	public String getFiller_2() {
		if (filler_2 == null) {
			filler_2 = FILLER_2.getString(_byteBuffer);
		}
		return filler_2;
	}

	public void setFiller_2(String filler_2) {
		if (FILLER_2.equals(this.filler_2, filler_2)) {
			return;
		}
		FILLER_2.putString(filler_2, _byteBuffer);
		this.filler_2 = filler_2;
	}

	public int getFiller_3() {
		if (!filler_3IsSet) {
			filler_3 = FILLER_3.getInt(_byteBuffer);
			filler_3IsSet = true;
		}
		return filler_3;
	}

	public void setFiller_3(int filler_3) {
		if (filler_3IsSet && FILLER_3.equals(this.filler_3, filler_3)) {
			return;
		}
		FILLER_3.putInt(filler_3, _byteBuffer);
		this.filler_3 = filler_3;
		filler_3IsSet = true;
	}

	public int getFiller_4() {
		if (!filler_4IsSet) {
			filler_4 = FILLER_4.getInt(_byteBuffer);
			filler_4IsSet = true;
		}
		return filler_4;
	}

	public void setFiller_4(int filler_4) {
		if (filler_4IsSet && FILLER_4.equals(this.filler_4, filler_4)) {
			return;
		}
		FILLER_4.putInt(filler_4, _byteBuffer);
		this.filler_4 = filler_4;
		filler_4IsSet = true;
	}

	public int getFiller_5() {
		if (!filler_5IsSet) {
			filler_5 = FILLER_5.getInt(_byteBuffer);
			filler_5IsSet = true;
		}
		return filler_5;
	}

	public void setFiller_5(int filler_5) {
		if (filler_5IsSet && FILLER_5.equals(this.filler_5, filler_5)) {
			return;
		}
		FILLER_5.putInt(filler_5, _byteBuffer);
		this.filler_5 = filler_5;
		filler_5IsSet = true;
	}

}
